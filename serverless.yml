service: uaipy-core

provider:
  name: aws
  runtime: nodejs18.x
  stage: ${opt:stage, "local"}
  environment: ${file(./config/environments/env.${self:provider.stage}.json)}
  apiGateway:
    apiKeys:
      - device:
          - deviceApiKey
      - client:
          - clientApiKey
    usagePlan:
      - device:
          quota:
            limit: 50000
            offset: 2
            period: MONTH
          throttle:
            burstLimit: 2000
            rateLimit: 1000
      - client:
          quota:
            limit: 50000
            offset: 2
            period: MONTH
          throttle:
            burstLimit: 2000
            rateLimit: 1000
      - heroku:
          quota:
            limit: 50000
            offset: 2
            period: MONTH
          throttle:
            burstLimit: 2000
            rateLimit: 1000
plugins:
  - serverless-plugin-typescript
  - serverless-offline

build:
  esbuild: false

functions:
  getUsersFunction:
    handler: src/infra/functions/user/getUsersFunction.handler

  createUserFunction:
    handler: src/infra/functions/user/createUserFunction.handler
    events:
      - http:
          path: user
          method: POST
          private: true
          cors: true

  helloFunction:
    handler: src/infra/functions/helloFunction.handler
    events:
      - http:
          private: true
          path: hello
          method: GET
          cors: true
          
  userAuthFunction:
    handler: src/infra/functions/userAuthFunction.handler
    events:
      - http:
          path: user/auth
          method: POST
          private: true
          cors: true

  createOrquestratorFunction:
    handler: src/infra/functions/orquestrator/createOrquestratorFunction.handler
    events:
      - http:
          path: orquestrator
          method: POST
          private: true
          cors: true

  createMessageFunction:
    handler: src/infra/functions/message/createMessageFunction.handler
    events:
      - http:
          path: message/publish
          method: POST
          private: true
          cors: true

  getMessageFunction:
    handler: src/infra/functions/message/getMessageFunction.handler
    events:
      - http:
          path: message
          method: GET
          private: true
          cors: true